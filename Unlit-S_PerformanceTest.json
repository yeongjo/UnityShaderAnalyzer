[{"py/object": "compiled_shader_to_json.Shader", "vert": "#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 1\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n uniform UnityPerDraw {\n#endif\n\tUNITY_UNIFORM vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\n\tUNITY_UNIFORM vec4 hlslcc_mtx4x4unity_WorldToObject[4];\n\tUNITY_UNIFORM vec4 unity_LODFade;\n\tUNITY_UNIFORM mediump vec4 unity_WorldTransformParams;\n\tUNITY_UNIFORM mediump vec4 unity_LightData;\n\tUNITY_UNIFORM mediump vec4 unity_LightIndices[2];\n\tUNITY_UNIFORM vec4 unity_ProbesOcclusion;\n\tUNITY_UNIFORM mediump vec4 unity_SpecCube0_HDR;\n\tUNITY_UNIFORM vec4 unity_LightmapST;\n\tUNITY_UNIFORM vec4 unity_DynamicLightmapST;\n\tUNITY_UNIFORM mediump vec4 unity_SHAr;\n\tUNITY_UNIFORM mediump vec4 unity_SHAg;\n\tUNITY_UNIFORM mediump vec4 unity_SHAb;\n\tUNITY_UNIFORM mediump vec4 unity_SHBr;\n\tUNITY_UNIFORM mediump vec4 unity_SHBg;\n\tUNITY_UNIFORM mediump vec4 unity_SHBb;\n\tUNITY_UNIFORM mediump vec4 unity_SHC;\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n};\n#endif\nin mediump vec3 in_POSITION0;\nin mediump vec2 in_TEXCOORD0;\nin mediump vec3 in_NORMAL0;\nout mediump vec2 vs_TEXCOORD0;\nmediump  vec4 phase0_Output0_1;\nout mediump float vs_TEXCOORD2;\nout mediump float vs_TEXCOORD3;\nout mediump vec3 vs_TEXCOORD1;\nout highp float vs_TEXCOORD4;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_2;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_MatrixVP[3];\n    gl_Position = u_xlat0;\n    u_xlat16_2.xyz = u_xlat0.xxx + vec3(0.100000001, 0.200000003, 0.300000012);\n    phase0_Output0_1.zw = u_xlat16_2.xy;\n    vs_TEXCOORD4 = u_xlat16_2.z;\n    phase0_Output0_1.xy = in_TEXCOORD0.xy;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat9 = max(u_xlat9, 1.17549435e-38);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\nvs_TEXCOORD0 = phase0_Output0_1.xy;\nvs_TEXCOORD2 = phase0_Output0_1.z;\nvs_TEXCOORD3 = phase0_Output0_1.w;\n    return;\n}", "frag": "#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 1\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(1) uniform mediump sampler2D _BaseMap;\nin mediump vec2 vs_TEXCOORD0;\nin mediump float vs_TEXCOORD2;\nin mediump float vs_TEXCOORD3;\nin mediump vec3 vs_TEXCOORD1;\nin highp float vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump vec3 u_xlat16_0;\nfloat u_xlat1;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat3;\nvoid main()\n{\n    u_xlat16_0.x = vs_TEXCOORD3 + vs_TEXCOORD2;\n    u_xlat1 = u_xlat16_0.x + vs_TEXCOORD4;\n    u_xlat3.xyz = texture(_BaseMap, vs_TEXCOORD0.xy).xyz;\n    u_xlat3.x = u_xlat1 + u_xlat3.x;\n    u_xlat16_0.xyz = u_xlat3.xyz + vec3(-0.5, -0.5, -0.5);\n    u_xlat16_1.xyz = textureLod(unity_SpecCube0, vs_TEXCOORD1.xyz, 0.0).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;\n    SV_Target0.w = 0.200000003;\n    return;\n}", "name": "Global Keywords: <none>\nLocal Keywords: <none>\n", "result_vert": "Mali Offline Compiler v7.4.0 (Build 330167)\nCopyright 2007-2021 Arm Limited, all rights reserved\n\nConfiguration\n=============\n\nHardware: Mali-G76 r0p0\nArchitecture: Bifrost\nDriver: r32p0-00rel0\nShader type: OpenGL ES Vertex\n\nMain shader\n===========\n\nPosition variant\n----------------\n\nWork registers: 21\nUniform registers: 64\nStack spilling: false\n16-bit arithmetic: 0%\n\n                                A      LS       T    Bound\nTotal instruction cycles:    0.92    1.00    0.00       LS\nShortest path cycles:        0.92    1.00    0.00       LS\nLongest path cycles:         0.92    1.00    0.00       LS\n\nA = Arithmetic, LS = Load/Store, T = Texture\n\nVarying variant\n---------------\n\nWork registers: 25\nUniform registers: 58\nStack spilling: false\n16-bit arithmetic: 0%\n\n                                A      LS       T    Bound\nTotal instruction cycles:    1.04   13.00    0.00       LS\nShortest path cycles:        1.04   13.00    0.00       LS\nLongest path cycles:         1.04   13.00    0.00       LS\n\nA = Arithmetic, LS = Load/Store, T = Texture\n\nShader properties\n=================\n\nHas uniform computation: true\n", "result_frag": "Mali Offline Compiler v7.4.0 (Build 330167)\nCopyright 2007-2021 Arm Limited, all rights reserved\n\nConfiguration\n=============\n\nHardware: Mali-G76 r0p0\nArchitecture: Bifrost\nDriver: r32p0-00rel0\nShader type: OpenGL ES Fragment\n\nMain shader\n===========\n\nWork registers: 25\nUniform registers: 0\nStack spilling: false\n16-bit arithmetic: 33%\n\n                                A      LS       V       T    Bound\nTotal instruction cycles:    0.58    0.00    1.00    1.00     V, T\nShortest path cycles:        0.58    0.00    1.00    1.00     V, T\nLongest path cycles:         0.58    0.00    1.00    1.00     V, T\n\nA = Arithmetic, LS = Load/Store, V = Varying, T = Texture\n\nShader properties\n=================\n\nHas uniform computation: false\nHas side-effects: false\nModifies coverage: false\nUses late ZS test: false\nUses late ZS update: false\nReads color buffer: false\n\nNote: This tool shows only the shader-visible property state.\nAPI configuration may also impact the value of some properties.\n"}]